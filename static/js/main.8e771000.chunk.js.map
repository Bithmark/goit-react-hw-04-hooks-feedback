{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.jsx","index.js"],"names":["module","exports","Statistics","good","bad","neutral","positivePercentage","className","css","ul","li","Section","children","wrapper","div","FeedbackOptions","options","onLeaveFeedback","map","option","type","btn","onClick","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevGood","prevNeutral","prevBad","total","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,GAAK,uBAAuB,GAAK,yB,kBCAnDD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,QAAU,2B,gBCAvDD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,IAAM,+B,sICW5CC,EAVI,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,mBACzC,OAAQ,qBAAIC,UAAWC,IAAIC,GAAnB,UACJ,qBAAIF,UAAWC,IAAIE,GAAnB,mBAA8BP,KAC9B,qBAAII,UAAWC,IAAIE,GAAnB,sBAAiCL,KACjC,qBAAIE,UAAWC,IAAIE,GAAnB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAIE,GAAnB,oBAA+BP,EAAKC,EAAIC,KACxC,qBAAIE,UAAWC,IAAIE,GAAnB,gCAA2CJ,EAA3C,W,gBCEWK,EARC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACd,OAAQ,qBAAKL,UAAWC,IAAIK,QAApB,SACJ,qBAAKN,UAAWC,IAAIM,IAApB,SACKF,O,gBCYEG,MAff,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,qBAAKZ,UAAWC,IAAIM,IAApB,SACE,wBACEM,KAAK,SACLb,UAAWC,IAAIa,IAEfC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,SC+CEI,MAlDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAkBMC,EAAqB,WACzB,OAAOzB,EAAOE,EAAUD,GAO1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEY,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5BsB,SAACE,GAC3B,OAAQA,GACN,IAAK,OACHM,GAAQ,SAACI,GAAD,OAAcA,EAAW,KACjC,MACF,IAAK,UACHH,GAAW,SAACI,GAAD,OAAiBA,EAAc,KAC1C,MACF,IAAK,MACHH,GAAO,SAACI,GAAD,OAAaA,EAAU,KAC9B,MACF,QACE,WAkBDH,IACC,cAAC,EAAD,CACEzB,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACL4B,MAAOJ,IACPtB,mBAfC2B,KAAKC,MAAO/B,EAAOyB,IAAwB,MAAQ,IAkBtD,sDC5CRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e771000.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Statistics_ul__6o_tq\",\"li\":\"Statistics_li__2VzvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Section_div__Did1s\",\"wrapper\":\"Section_wrapper__ouaCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"FeedbackOptions_div__2i3ZS\",\"btn\":\"FeedbackOptions_btn__2ds5B\"};","import css from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({good, bad, neutral, positivePercentage}) => {\r\nreturn (<ul className={css.ul}>\r\n    <li className={css.li}>Good: {good}</li>\r\n    <li className={css.li}>Neutral: {neutral}</li>\r\n    <li className={css.li}>Bad: {bad}</li>\r\n    <li className={css.li}>Total: {good+bad+neutral}</li>\r\n    <li className={css.li}>Positive feedback: {positivePercentage}%</li>\r\n</ul>)\r\n}\r\n\r\nexport default Statistics;","import css from \"./Section.module.css\"\r\n\r\nconst Section = ({children}) => {\r\n    return (<div className={css.wrapper}>\r\n        <div className={css.div}>\r\n            {children}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Section","import css from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map((option) => (\r\n    <div className={css.div}>\r\n      <button\r\n        type=\"button\"\r\n        className={css.btn}\r\n        key={option}\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prevGood) => prevGood + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevNeutral) => prevNeutral + 1);\n        break;\n      case \"bad\":\n        setBad((prevBad) => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100) || 0;\n  };\n\n  return (\n    <Section>\n      <FeedbackOptions\n        options={[\"good\", \"neutral\", \"bad\"]}\n        onLeaveFeedback={handleClickFeedback}\n      />\n      {countTotalFeedback() ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <p>No feedback given</p>\n      )}\n    </Section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}